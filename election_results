import codecademylib
# Import numpy and matplotlib
import numpy as np
from matplotlib import pyplot as plt

survey_responses = ['Ceballos', 'Kerrigan', 'Ceballos', 'Ceballos', 'Ceballos','Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Ceballos', 
'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Ceballos', 'Ceballos', 'Ceballos', 'Ceballos',
'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Ceballos',
'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Ceballos', 'Ceballos', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Kerrigan', 'Ceballos']

# Calculate number of responses for 'Ceballos'.
total_ceballos = sum([1 for response in survey_responses if response == 'Ceballos'])
print(total_ceballos)

survey_length = float(len(survey_responses))

print(survey_length)

# Calculate percentage of responses for 'Ceballos'
percentage_ceballos = total_ceballos / float(survey_length)   
print(percentage_ceballos)

# Generate binomial distrobution using total responses, success rate, and town's population.
# a = np.random.binomial(N, P, size=10000) / N
possible_surveys = np.random.binomial(survey_length, .54, size=10000) / survey_length
# Plot a histogram of possible_surveys. Range of 1-0. 20 bins.
plt.hist(possible_surveys, range=(0,1), bins=20)
plt.show()

# Calculate percentage of surveys with Ceballos getting less than 50% of the vote
possible_surveys_legnth = float(len(possible_surveys))

incorrect_predictions = len(possible_surveys[possible_surveys < .5])

ceballos_loss_surveys = incorrect_predictions / possible_surveys_legnth
print(ceballos_loss_surveys)

# Create binomial distribution. Size=7000.
# a = np.random.binomial(N, P, size=10000) / N
large_survey = np.random.binomial(survey_length, .54, size=7000) / survey_length
print(large_survey)

# Recalculate percentage of surveys with Ceballos losing.
ceballos_loss_new = incorrect_predictions / possible_surveys_legnth
print(ceballos_loss_new)
